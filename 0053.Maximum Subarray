Given an integer array nums, find the subarray with the largest sum, and return its sum.


SOURCE CODE:
int max(int a,int b){
    return (a>b)?a:b;
}
int maxSubArray(int* nums, int numsSize) {
 if (numsSize == 0) return 0; 

  int cursum=nums[0];
  int maxsum=nums[0];

  for(int i=1;i<numsSize;i++){
    cursum=max(nums[i],cursum+nums[i]);
    maxsum=max(maxsum,cursum);
  }  
  return maxsum;
}
OUTPUT:

Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

Example 2:
Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.

Example 3:
Input: nums = [5,4,-1,7,8]
Output: 23
Explanation: The subarray [5,4,-1,7,8] has the largest sum 23.
