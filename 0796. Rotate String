Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift.

SOURCE CODE:

bool rotateString(char* s, char* goal)
{
    int len_s = strlen(s);
    int len_goal = strlen(goal);

    if (len_s != len_goal)
        return false;

    for (int i = 0; i < len_s; i++) {
        int j = 0;
        for (; j < len_goal; j++)
            if (s[(i+j) %len_s] != goal[j])
                break;
        if (j == len_goal)
            return true;
    }

    return false;
}

OUTPUT:

Example 1:
Input: s = "abcde", goal = "cdeab"
Output: true

Example 2:
Input: s = "abcde", goal = "abced"
Output: false 
