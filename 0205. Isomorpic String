Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character,
but a character may map to itself.

SOURCE CODE:

bool isIsomorphic(char* s, char* t)
{
    int s1[256] = {0}, s2[256] = {0};  // array for mapping the character
    int n = strlen(s);
        for (int i = 0; i < n; ++i)
        {
            if (s1[s[i]] != s2[t[i]])
                return false;
            s1[s[i]] = i + 1;
            s2[t[i]] = i + 1;
        }
        return true;
}
OUTPUT:

Example 1:
Input: s = "egg", t = "add"
Output: true
Explanation:
The strings s and t can be made identical by:
Mapping 'e' to 'a'.
Mapping 'g' to 'd'.

Example 2:
Input: s = "foo", t = "bar"
Output: false
Explanation:
The strings s and t can not be made identical as 'o' needs to be mapped to both 'a' and 'r'.

Example 3:
Input: s = "paper", t = "title"
Output: true
